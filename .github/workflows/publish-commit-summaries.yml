mkdir -p .github/workflows

tee .github/workflows/publish-commit-summaries.yml > /dev/null <<'YAML'
name: Publish Commit Summaries to Public Pages (Append)

on:
  push:
    branches:
      - main  # ← change if your main branch is different
  workflow_dispatch: {}

permissions:
  contents: read

jobs:
  export-and-append:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout private repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # we want full history for ranges

      - name: Clone public site (gh-pages)
        run: |
          set -e
          GIT_URL="https://x-access-token:${{ secrets.PUBLIC_REPO_TOKEN }}@github.com/mareekkk/FPM-changelogs.git"
          # Try to clone gh-pages directly; if it doesn't exist, init it.
          if git clone --depth 1 --branch gh-pages "$GIT_URL" public-site; then
            echo "Cloned existing gh-pages branch."
          else
            echo "gh-pages branch not found; initializing…"
            git clone "$GIT_URL" public-site
            cd public-site
            git checkout --orphan gh-pages
            echo "# Project Changelog" > index.md
            echo "_Last published SHA will be tracked in this branch._" > README.md
            echo "" > last_published_sha.txt
            git add index.md README.md last_published_sha.txt
            git -c user.name="changelog-bot" -c user.email="actions@github.com" commit -m "Initialize gh-pages"
            git push -u origin gh-pages
          fi

      - name: Read last published SHA
        id: state
        run: |
          set -e
          if [ -f public-site/last_published_sha.txt ]; then
            LAST_SHA=$(cat public-site/last_published_sha.txt | tr -d '[:space:]')
          else
            LAST_SHA=""
          fi
          echo "last_sha=$LAST_SHA" >> $GITHUB_OUTPUT

      - name: Generate new commit section
        id: gen
        run: |
          set -e
          DATE_HDR="$(date -u +"%Y-%m-%d %H:%M UTC")"
          echo "## $DATE_HDR" > new_commits.md

          if [ -n "${{ steps.state.outputs.last_sha }}" ]; then
            RANGE="${{ steps.state.outputs.last_sha }}..HEAD"
          else
            # First publish: avoid dumping your entire history; limit to the latest 100
            RANGE="HEAD~100..HEAD"
          fi

          # Format: - shortHash message — author
          git log $RANGE --no-merges --pretty=format:"- \`%h\` %s — %an" > body.txt || true

          if [ ! -s body.txt ]; then
            echo "no_changes=true" >> $GITHUB_OUTPUT
            exit 0
          fi

          cat body.txt >> new_commits.md
          echo "no_changes=false" >> $GITHUB_OUTPUT

      - name: Append to public index & update state
        if: steps.gen.outputs.no_changes == 'false'
        run: |
          set -e
          # SHA of HEAD commit in private repo (the boundary for next time)
          NEW_SHA=$(git rev-parse HEAD)
          echo "Publishing up to $NEW_SHA"

          cd public-site
          test -f index.md || echo "# Project Changelog" > index.md
          printf "\n\n" >> index.md
          cat ../new_commits.md >> index.md

          echo "$NEW_SHA" > last_published_sha.txt

          git config user.name "changelog-bot"
          git config user.email "actions@github.com"
          git add index.md last_published_sha.txt
          git commit -m "chore: append commits up to ${NEW_SHA:0:7}"
          git push origin gh-pages
YAML
